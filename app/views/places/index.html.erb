


<p id="notice"><%= notice %></p>

<h1>Farm List</h1>

<%= form_tag places_path, :method => :get do %>
<p>
    <%= text_field_tag :search, params[:search] %>
    <%= submit_tag "Search Near" , :title => nil %>
  </p>
  <% end %>




<table style="width:100%" , class="table">
  <thead>
    <tr>
  <!--     <th>Latitude</th>
      <th>Longitude</th> -->
      <th>Farm Name</th>
      <th>Farm Address</th>
      <th>Farm Produce</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @places.each do |place| %>
      <tr>
       
     <!--    <td><%= place.latitude %></td>
        <td><%= place.longitude %></td> -->
        <td><%= place.name %></td>  
        <td><%= place.address %></td>   
        <td><%= place.title %></td>
        <td><%= link_to 'Show', place %></td>
        <td><%= link_to 'Edit', edit_place_path(place) %></td>
        <td><%= link_to 'Destroy', place, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Place', new_place_path %>


<!-- <center>
<div style='width: 800px;'>
  <div id="multi_markers" style='width: 800px; height: 400px;'></div>
</div></center>


<script >
var handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'multi_markers'}}, function(){
  var markers = handler.addMarkers(<%=raw @hash.to_json %>);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
});

</script>

 -->
<!--
<html>
  <head>
    <title>Simple Map</title>
   
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 50%;
        width: 50%
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      #infoPanel {
        float: left;
        margin-left: 10px;
      }
      #infoPanel div {
        margin-bottom: 5px;
      }

       /*#floating-panel {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }*/

    </style>
  </head>
  <body>

   
    <input id="address" type="textbox" value="Sydney, NSW">
    <input id="submit" type="button" value="Geocode">
  
    <div id="map"></div>
    <div id="infoPanel">
    <b>Marker status:</b>
    <div id="markerStatus"><i>Click and drag the marker.</i></div>
    <b>Current position:</b>
    <div id="info"></div>
    <b>Closest matching address:</b>
    <div id="address"></div>
   






    <script>

    var geocoder = new google.maps.Geocoder();
    function geocodePosition(pos) {
      geocoder.geocode({
      latLng: pos
         }, function(responses) {
      if (responses && responses.length > 0) {
      updateMarkerAddress(responses[0].formatted_address);
      } else {
      updateMarkerAddress('Cannot determine address at this location.');
      }
    });
  }


    function updateMarkerStatus(str) {
      document.getElementById('markerStatus').innerHTML = str;
  }

    function updateMarkerPosition(latLng) {
      document.getElementById('info').innerHTML = [
      latLng.lat(),
      latLng.lng()
    ].join(', ');
  }

    function updateMarkerAddress(str) {
      document.getElementById('address').innerHTML = str;
    }

      function initMap() {
      var latLng = new google.maps.LatLng(5.037236278483761, 108.2260016860962);
      var map = new google.maps.Map(document.getElementById('map'), {
          center: latLng,
          zoom: 5
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });

       // var marker = new google.maps.Marker({
       //    position: malaysia,
       //    map: map,
       //    draggable: true,
       //    title: 'Click to zoom'
       //  });
        document.getElementById('submit').addEventListener('click', function() {
          geocodeAddress(geocoder, map);
        });
      }

      function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({'address': address}, function(results, status) {
          if (status === 'OK') {
            resultsMap.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
              map: resultsMap,
              draggable: true,
              title: 'Click to zoom',
              position: results[0].geometry.location
            });
          } else {
            alert('Geocode was not successful for the following reason: ' + status);
          }
        });
  
      //   var infoWindow = new google.maps.InfoWindow({map: map});

      //   // Try HTML5 geolocation.
      //   if (navigator.geolocation) {
      //     navigator.geolocation.getCurrentPosition(function(position) {
      //       var pos = {
      //         lat: position.coords.latitude,
      //         lng: position.coords.longitude
      //       };

      //       infoWindow.setPosition(pos);
      //       infoWindow.setContent('Your Location');
      //       map.setCenter(pos);
      //     }, function() {
      //       handleLocationError(true, infoWindow, map.getCenter());
      //     });
      //   } else {
      //     // Browser doesn't support Geolocation
      //     handleLocationError(false, infoWindow, map.getCenter());
      //   }
      


      // function handleLocationError(browserHasGeolocation, infoWindow, pos) {
      //   infoWindow.setPosition(pos);
      //   infoWindow.setContent(browserHasGeolocation ?
      //                         'Error: The Geolocation service failed.' :
      //                         'Error: Your browser doesn\'t support geolocation.');



      // }
  updateMarkerPosition(latLng);
  geocodePosition(latLng);

  // Add dragging event listeners.
  google.maps.event.addListener(marker, 'dragstart', function() {
    updateMarkerAddress('Dragging...');
  });

  google.maps.event.addListener(marker, 'drag', function() {
    updateMarkerStatus('Dragging...');
    updateMarkerPosition(marker.getPosition());
  });

  google.maps.event.addListener(marker, 'dragend', function() {
    updateMarkerStatus('Drag ended');
    geocodePosition(marker.getPosition());
  });
    }

    google.maps.event.addDomListener(window, 'load', initMap);
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCOealGUq1fv1KL0l5QleToE83Acpxi60o&callback=initMap"
    async defer></script>
  </body>
</html>-->

