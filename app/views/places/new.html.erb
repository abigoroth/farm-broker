
<h1 id="label_new">New Farm</h1>



<!-- <head>
<meta charset="utf-8">
<style>
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}
#map {
  width: 100%;
  height: 400px;
}
.controls {
  margin-top: 10px;
  border: 1px solid transparent;
  border-radius: 2px 0 0 2px;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  height: 32px;
  outline: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}
#searchInput {
  background-color: #fff;
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
  margin-left: 12px;
  padding: 0 11px 0 13px;
  text-overflow: ellipsis;
  width: 50%;
}
#searchInput:focus {
  border-color: #4d90fe;
}

</style>
</head>
<body>
<input id="searchInput" class="controls" type="text" placeholder="Enter a location">
<div id="map"></div>
<ul id="geoData">
    <li>Full Address: <span id="location"></span></li>
    <li>Postal Code: <span id="postal_code"></span></li>
    <li>Country: <span id="country"></span></li>
    <li>Latitude: <span id="lat"></span></li>
    <li>Longitude: <span id="lon"></span></li>
</ul>
<script>
function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 3.064736330699356, lng: 101.5243415298462},
      zoom: 15
    });
    var input = document.getElementById('searchInput');
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);


    
    var infowindow = new google.maps.InfoWindow();
    var marker = new google.maps.Marker({
        map: map,
         anchorPoint: new google.maps.Point(0, -29)

    });

    autocomplete.addListener('place_changed', function() {
        infowindow.close();
        marker.setVisible(false);
        var place = autocomplete.getPlace();
        if (!place.geometry) {
            window.alert("Autocomplete's returned place contains no geometry");
            return;
        }
  
        // If the place has a geometry, then present it on a map.
        if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
        } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
        }
        marker.setIcon(({
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(35, 35)
        }));
        marker.setPosition(place.geometry.location);
        marker.setVisible(true);
    
        var address = '';
        if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
        }
    
        infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
        infowindow.open(map, marker);
      
        //Location details
        for (var i = 0; i < place.address_components.length; i++) {
            if(place.address_components[i].types[0] == 'postal_code'){
                document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;
            }
            if(place.address_components[i].types[0] == 'country'){
                document.getElementById('country').innerHTML = place.address_components[i].long_name;
            }
        }
        document.getElementById('location').innerHTML = place.formatted_address;
        document.getElementById('lat').innerHTML = place.geometry.location.lat();
        document.getElementById('lon').innerHTML = place.geometry.location.lng();
    });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initMap" async defer></script>
</body> -->


<div class="row">
  <div class="col-sm-4">
    <h1>Farm Information</h1>
    <%= render 'form', place: @place %>

    <%= link_to 'Back', places_path %></div>




    <div class="col-sm-4">
     
      <h1>Find Farm Location</h1>
      <head>
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
        <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
</head>

<body>
  <style>
    #mapCanvas {
      width: 500px;
      height: 400px;
      float: left;
    }
    #infoPanel {
      float: left;
      margin-left: 10px;
    }
    #infoPanel div {
      margin-bottom: 5px;
    }
  </style>
    <div id="floating-panel">
      <input id="searchaddress" type="textbox" placeholder="Your area">
      <input id="submit" type="button" value="Search">
    </div>

  <div id="mapCanvas"></div>
  <div id="infoPanel">
    <b>Marker status:</b>
    <div id="markerStatus"><i>Click and drag the marker.</i></div>
    <b>Current position:</b>
    <div id="info"></div>
    <b>Closest matching address:</b>
    <div id="address"></div>
  </div>
  <div>
  </div>
</body>
</div></div>







<script>



if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else { 
       
    }


function showPosition(position) {

  var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
  var map = new google.maps.Map(document.getElementById('mapCanvas'), {
    zoom: 15,
    center: latLng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
   

  //mula map
  var marker = new google.maps.Marker({
    position: latLng,
    title: 'Your Location',
    map: map,
    draggable: true
  });


          //start positon
          var geocoder = new google.maps.Geocoder();

          function geocodePosition(pos) {
            geocoder.geocode({
              latLng: pos
            }, function(responses) {
              if (responses && responses.length > 0) {
                updateMarkerAddress(responses[0].formatted_address);
              } else {
                updateMarkerAddress('Cannot determine address at this location.');
              }
            });
          }

          function updateMarkerStatus(str) {
            document.getElementById('markerStatus').innerHTML = str;
          }

          function updateMarkerPosition(latLng) {
            document.getElementById('info').innerHTML = [
            latLng.lat(),
            latLng.lng()
            ].join(', ');
          }
          

          function updateMarkerAddress(str) {
            document.getElementById('address').innerHTML = str;
            $("#place_address").val(str)
          }

               
        // Onload handler to fire off the app.
        //google.maps.event.addDomListener(window, 'load', initialize);

        function geocodeAddress(geocoder, resultsMap) {
          var address = document.getElementById('searchaddress').value;
          geocoder.geocode({'address': address}, function(results, status) {
            if (status === 'OK') {
              resultsMap.setCenter(results[0].geometry.location);
              // var marker = new google.maps.Marker({
              //   map: resultsMap,
              //   position: results[0].geometry.location
              // });
              marker.setPosition( results[0].geometry.location )
              console.log(results[0].geometry.location)
              updateMarkerPosition(results[0].geometry.location)
            } else {
              alert('Geocode was not successful for the following reason: ' + status);
            }
          });
        }
        //end positon


        //search
        document.getElementById('submit').addEventListener('click', function() {
          geocodeAddress(geocoder, map);
        });

        // Update current position info.
        updateMarkerPosition(latLng);
        geocodePosition(latLng);

        // Add dragging event listeners.
        google.maps.event.addListener(marker, 'dragstart', function() {
          updateMarkerAddress('Dragging...');
        });

        google.maps.event.addListener(marker, 'drag', function() {
          updateMarkerStatus('Dragging...');
          updateMarkerPosition(marker.getPosition());
        });

        google.maps.event.addListener(marker, 'dragend', function() {
          updateMarkerStatus('Drag ended');
          console.log("dadda")
          console.log(marker.getPosition())
          console.log(marker.getPosition().lat())
          geocodePosition(marker.getPosition());
          $("#place_latitude").val(marker.getPosition().lat())
          $("#place_longitude").val(marker.getPosition().lng())
        });
      //end map
  }
</script>









