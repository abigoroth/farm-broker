<style>
#mapCanvas {

width: 400px;
height: 300px;
float: left;
}
#infoPanel {
float: left;
margin-left: 10px;
}
#infoPanel div {
margin-bottom: 5px;
}
</style>
<div class = "modal-dialog modal-lg" >
  <div class = "modal-content" >
    <%= simple_form_for(@farmsite, html: {remote: true}, authenticity_token: true) do |f| %>
    <% if @farmsite.errors.any? %>
    <div id="error_explanation" class= "alert alert-dismissible alert-danger">
      <h2><%= pluralize(@farmsite.errors.count, "error") %> prohibited this farmsite from being saved:</h2>
      <% @farmsite.errors.full_messages.each do |message| %>
      <li><%= message %></li>
      <% end %>
    </div>
    <% end %>
    <div class = "modal-header" >
      <center><h4 class = "modal-title" >Farm Site</h4></center>
    </div>
    <div class = "modal-body" >
      <div class="row">
        <div class="well">
          <div class="panel panel-default">
            <div class="panel-body">
              <div class="row">
                <div class="col-sm-6">
                  <div class="form-inputs">
                    
                    <%= f.input :farmsitename%>
                    <%= f.label "Farm Image:" %>
                    <%= f.file_field :avatar %>
                    <%= f.label "Phone Number:" %>
                    <%= f.text_field :farmsiteownerphoneno, :class => "form-control", :placeholder => "Owner Phone Number" %>
                    <%= f.label "Farm Size:" %>
                    <%= f.text_field :farmsitesize, :class => "form-control", :placeholder => "Farm size in acres" %>
                    <span class="input-group-addon" id="basic-addon2">acres</span>
                    <%= f.label "Latitude:" %>
                    <%= f.text_field :latitude, :class => "form-control",readonly: true %>
                    <%= f.label "Longitude:" %>
                    <%= f.text_field :longitude, :class => "form-control",readonly: true %>
                    <%= f.label "Edit Actual Address:" %>
                    <%= f.text_area :farmsiteaddress, :class => "form-control", :placeholder => "Farm address" %>
                    
                    <%= f.input :farmsitestate, :collection => State, :class => "form-control", :placeholder => "farmsitestates" %>
                    <%= f.input :farmsitecity, :collection => [],  :class => "form-control", :placeholder => "farmsitecity" %>
                    <%= f.label "farmsite description:" %>
                    <%= f.text_area :farmsitedescription, :class => "form-control", :placeholder => "farmsitedescription" %>
                  </div> </div>
                  <div class="col-sm-6">
                    <%= f.label "Where your farm located?:" %>
                    
                    
                    <!--  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
                    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %> -->
                    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
                    <script src="//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js" type ="text/javascript"></script>
                    <div id="floating-panel">
                      <input id="search_address" class = "form-control" placeholder="Your Farm Area">
                      <button id="submit" type="button" style="float: right;" class="btn btn-default btn-sm" >Search</button>
                    </div><br>
                    <div id="mapCanvas"></div>
                    <div id="infoPanel">
                      <b>Marker status:</b>
                      <div id="markerStatus"><i>Click and drag the marker.</i></div>
                      <b>Current position:</b>
                      <div id="info"></div>
                      <b>Closest matching address:</b>
                      <div id="address"></div>
                      <div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <center><div class="actions">
              <%= f.submit 'Create',class: 'btn btn-lg btn-success btn-sm'%>
            </div></center>
            <% end %>
          </div>
        </div>
      </div>
      <div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div>
    </div>
  </div>
</div>
<%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
<%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
<script src =  "//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script>
 // from_db_lat = <%= @farmsite.latitude %>
 // from_db_lng = <%= @farmsite.longitude %>
// if (from_db_lat != null){
//   alert(from_db_lat)
//   alert(from_db_lng)
//   var tmp_latLng = new google.maps.LatLng(from_db_lat, from_db_lng);
// } else {

var tmp_latLng = new google.maps.LatLng(2.997787844430087, 101.23273917236327);
// }
var map = new google.maps.Map(document.getElementById('mapCanvas'), {
    zoom: 15,
    center: tmp_latLng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
});

var marker = new google.maps.Marker({
    position: tmp_latLng,
    title: 'Your Location',
    map: map,
    draggable: true
});
// console.log(from_db_lat)

// if (from_db_lat == null){ 
  if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(successCallback, errorCallback, {
          timeout: 10000
      });
      // navigator.geolocation.getCurrentPosition(showPosition);
  }
// } else {
//   alert("show position");
//   var latLong = {
//       lat: from_db_lat,
//       lng: from_db_lng
//   };
//   alert(latLong)
//   console.log(latLong)
//   showPosition(latLong);

// }

function errorCallback(error) {
    var latLong;
    $.getJSON("http://ipinfo.io", function(ipinfo) {
        console.log("Found location [" + ipinfo.loc + "] by ipinfo.io");
        latLong = ipinfo.loc.split(",");
        var latLng = {
            lat: latLong[0],
            lng: latLong[1]
        };
        showPosition(latLng);
        // updateMarkerPosition(latLng);
    });
}

function successCallback(position) {
    var latlng = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
    }
    showPosition(latlng)
}

function showPosition(position) {
    var latLng = new google.maps.LatLng(position.lat, position.lng);
    // updateMarkerPosition(latlng);
    // set center map
    map.panTo(latLng)
    //mula map

    //update marker position
    marker.setPosition(latLng)

    var circle = new google.maps.Circle({
        map: map,
        radius: 50, // 10 miles in metres
        fillColor: '##73E444'
    });
    circle.bindTo('center', marker, 'position');
    //start positon

    google.maps.event.addListener(marker, 'dragstart', function() {
        updateMarkerAddress('Dragging...');


    });
    google.maps.event.addListener(marker, 'drag', function() {
        updateMarkerStatus('Dragging...');
        updateMarkerPosition(marker.getPosition());
    });
    google.maps.event.addListener(marker, 'dragend', function() {
        updateMarkerStatus('Drag ended');
        console.log("marker")
        console.log(marker.getPosition())
        console.log(marker.getPosition().lat())
        geocodePosition(marker.getPosition());
        $("#farmsite_latitude").val(marker.getPosition().lat())
        $("#farmsite_longitude").val(marker.getPosition().lng())
        var latLngadd = new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng());
        geocodePosition(latLngadd);
        //$("#farmsite_farmsiteaddress").val())
    });
}

var geocoder = new google.maps.Geocoder();

function geocodePosition(pos) {
    geocoder.geocode({
        latLng: pos
    }, function(responses) {
        if (responses && responses.length > 0) {
            updateMarkerAddress(responses[0].formatted_address);
        } else {
            updateMarkerAddress('Cannot determine address at this location.');
        }
    });
}

function updateMarkerStatus(str) {
    document.getElementById('markerStatus').innerHTML = str;
}

function updateMarkerPosition(latLng) {
    document.getElementById('info').innerHTML = [
        latLng.lat(),
        latLng.lng()
    ].join(', ');
}

function updateMarkerAddress(str) {
    document.getElementById('address').innerHTML = str;
    $("#address").html(str)
    $("#farmsite_farmsiteaddress").val(str)
}

// Update current position info.
// Add dragging event listeners.

// Onload handler to fire off the app.
//google.maps.event.addDomListener(window, 'load', initialize);
function geocodeAddress(geocoder, resultsMap) {
    var address = document.getElementById('search_address').value;
    geocoder.geocode({
        'address': address
    }, function(results, status) {
        if (status === 'OK') {
            resultsMap.setCenter(results[0].geometry.location);
            // var marker = new google.maps.Marker({
            //   map: resultsMap,
            //   position: results[0].geometry.location
            // });
            marker.setPosition(results[0].geometry.location)
            console.log(results[0].geometry.location)
            updateMarkerPosition(results[0].geometry.location)
        } else {
            alert('Geocode was not successful for the following reason: ' + status);
        }
    });
}
//end positon
//search
document.getElementById('submit').addEventListener('click', function() {
    geocodeAddress(geocoder, map);
});
var autocomplete = new google.maps.places.Autocomplete($("#search_address")[0], {});
google.maps.event.addListener(autocomplete, 'place_changed', function() {
    var place = autocomplete.getPlace();
    console.log(place.address_components);
});

city = <%= raw(City.to_json) %>
console.log(city)
    //selection
$('#farmsite_farmsitestate').change(function() {
    $("#farmsite_farmsitecity").html("")
        //show alert
        //alert ($('#farmsite_farmsitestate').val())
        //array city(#farmsite_farmsitesstate)
    console.log(city[$('#farmsite_farmsitestate').val()])
        //remove first element in arary
    city[$('#farmsite_farmsitestate').val()].shift();
    //loop
    $.each(city[$('#farmsite_farmsitestate').val()], function(i, v) {
        console.log(v)
            //append list sume dalam array selain guna html
        $("#farmsite_farmsitecity").append("<option value='" + v + "'> " + v + "</option>")
    })
});

var from_db_lat, from_db_lng;
 from_db_lat = '<%= @farmsite.latitude %>'
 from_db_lng = '<%= @farmsite.longitude %>'
if (from_db_lat.length > 0){
    latlng_lain = {
        lat: from_db_lat,
        lng: from_db_lng
    }
    console.log('atas')
    console.log(from_db_lat)
    console.log(from_db_lng)
    console.log(latlng_lain)
    console.log('bawah')
    showPosition(latlng_lain)
}
google.maps.event.trigger(map, 'resize');
</script>